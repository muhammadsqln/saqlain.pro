{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Cover","id","class","DetailPane","date","Date","getFullYear","DetailTitle","title","JobTile","duties","start","end","company","Skills","skills","name","level","style","margin","href","props","map","i","color","fontSize","width","fontWeight","display","justifyContent","bars","s","flexDirection","height","backgroundColor","boxShadow","borderRadius","padding","flexWrap","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.20e35ee1.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\n\nfunction Cover() {\n    return <div id=\"cover\">\n\n        <h2 class=\"cover-text\">Muhammad Saqlain</h2>\n        <h4 class=\"cover-text\">Toronto, Canada</h4>\n        <h4 class=\"cover-text\">(647) 786-6803</h4>\n\n        <h4 class=\"cover-text\">muhammads2001@hotmail.com</h4>\n    </div>\n\n}\n\n\n\nfunction Navigator(count) {\n    return <div id=\"navigator\">\n        <Dot selected={false} />\n        <Dot selected={true} />\n        <Dot selected={false} />\n        <Dot selected={false} />\n        <Dot selected={false} />\n    </div>\n}\n\nfunction Dot(props) {\n\n    const className = props.selected === true ? \"dot selected\" : \"dot\";\n\n    return <div className={className}>\n\n    </div>\n\n}\n\n\nfunction DetailPane() {\n\n    const date = new Date().getFullYear();\n\n    return <div id=\"detail-pane\">\n\n\n\n        <DetailTitle title=\"Experience\" />\n        <JobTile duties={[[<b>Software development</b>, <li class=\"listItem\">NC Pattern</li>,\n        <li class=\"listItem\">Launchpad</li>,\n        <li class=\"listItem\">Standard Library</li>,\n        <li class=\"listItem\">BOM Manipulator</li>,\n        <li class=\"listItem\">Excel Nesting Tool</li>,\n        <li class=\"listItem\">Developed and deployed numerous applications in C# for internal company use for many departments. </li>,\n        <li class=\"listItem\">Developed Solidworks add-ins, Solidworks PDM add-ins, Excel Add-ins,  Solidworks & PDM Standalone applications, and Solidworks Macros. </li>],\n\n        [<b>BOM Integration</b>, <li class=\"listItem\">Designed and trained the engineering department of the process of exporting a Solidworks Bill of Material into an ERP software, Industrios. </li>,\n        <li class=\"listItem\">Architected a Solidworks PDM add-in to validate, transform, and transfer data from the Solidworks BOM to ERP. </li>,\n        <li class=\"listItem\">Worked with third-party vendor to develop, and evolve the add-in. Tested each iteration of the add-in and deployed to PDM. </li>],\n        [<b>Reporting</b>, <li class=\"listItem\">Developed numerous interactive dashboards in Microsoft PowerBI, pulling data from various sources: SQL Server, MySQL, Access, ODBC, excel files, csv files.\n                </li>, <li class=\"listItem\">Automated certain data sources using Python & Selenium to download reports from the web periodically.\n                </li>, <li class=\"listItem\">Deployed dashboards and enabled data refreshes using On-Premise Gateway. </li>],\n        [<b>PDM Administration</b>, <li class=\"listItem\">Designed, maintained, and deployed Datacards.</li>, <li class=\"listItem\">Maintained PDM lists</li>, <li class=\"listItem\">Managed user permissions.</li>, <li class=\"listItem\">Folder Structure</li>],\n        [<b>Solidworks CAM</b>, <li class=\"listItem\">Developed the technology database for CAMWorks & Solidworks CAM</li>, <li class=\"listItem\">Created an instruction manual “CAM Handbook” tutorial for setting up CAM on Solidworks and to start creating CNC files.</li>, <li class=\"listItem\">Conducted training sessions with various departments on creating CNC files. </li>]\n\n        ]}\n            title=\"Development Engineer - System & Tools\"\n            start=\"February 2019\"\n            end=\"Present\"\n            company=\"Array Marketing\"\n        />\n        <JobTile duties={[\"Reviewed engineering technical drawings being sent for prototyping. Identified fit & function issues, incorrect clearances, invalid or inefficient design for manufacturing & assembly, issues with CNC files, missing assembly information etc. \", \"Conveyed potential issues back to engineers paired with possible solutions and/or steps for rectification. \", \"Maintained issues in a database, created dashboards using Microsoft PowerBI for conducting data analytics.\", \"Hosted periodic sessions with the engineering department and presented information back of common, new, or impactful issues.\", \"Trained new hires and assigned projects. \", \"Resolved technical issues that arose during prototyping or worked with the project's engineer to ensure all issues are resolved and closed timely.\"]}\n\n            title=\"Quality Engineer\"\n            start=\"July 2016\"\n            end=\"February 2019\"\n            company=\"Array Marketing\"\n        />\n\n        <DetailTitle title=\"Education\" />\n        <JobTile duties={[]}\n\n            title=\"Mechanical Engineering Technology\"\n            start=\"2013\"\n            end=\"2016\"\n            company=\"Centennial College, Toronto - Advanced Diploma\"\n        />\n        <DetailTitle title=\"Tools & Technologies\" />\n        <Skills skills={[\n            { name: \"Solidworks\", level: 90 },\n            { name: \"Flutter\", level: 90 },\n            { name: \"Dart\", level: 90 },\n            { name: \"3D Printing\", level: 90 },\n            { name: \"C#\", level: 90 },\n            { name: \"VBA\", level: 90 },\n            { name: \"Microsoft Power BI\", level: 85 },\n            { name: \"Firebase\", level: 85 },\n            { name: \"AutoCAD\", level: 80 },\n            { name: \"NoSQL\", level: 80 },\n            { name: \".NET Programming\", level: 80 },\n            { name: \"Solidworks API\", level: 80 },\n            { name: \"Solidworks PDM API\", level: 80 },\n            { name: \"Cloud Firestore\", level: 80 },\n            { name: \"Python\", level: 70 },\n            { name: \"SQL\", level: 70 },\n            { name: \"Java\", level: 70 },\n            { name: \"Adobe Illustrator\", level: 70 },\n            { name: \"Data Analysis\", level: 70 },\n            { name: \"React\", level: 60 },\n            { name: \"JavaScript\", level: 50 },\n            { name: \"Adobe Photoshop\", level: 50 },\n            { name: \"Adobe Premiere Pro\", level: 50 },\n            { name: \"Google Ads\", level: 50 },\n            { name: \"Facebook Ads\", level: 50 },\n            { name: \"Swift\", level: 50 },\n            { name: \"Node.JS\", level: 50 },\n            { name: \"GIT\", level: 50 },\n            { name: \"Google Cloud\", level: 50 },\n            { name: \"AWS\", level: 40 },\n            { name: \"Adobe After Effects\", level: 30 },\n            { name: \"Redux\", level: 30 },\n            { name: \"Tensorflow\", level: 20 },\n        ]} />\n\n        <div style={{margin:\"30px\"}}>\n            <a href=\"https://enabol.com\">© {date} Enabol</a>\n        </div>\n\n\n\n\n\n\n    </div>\n}\n\nfunction DetailTitle(props) {\n\n    return <div id=\"detail-title\">\n\n        {props.title}\n    </div>\n\n\n}\n\nfunction JobTile(props) {\n    const duties = props.duties.map(i => { return <div style={{ color: \"#858484\", fontSize: \"20px\", margin: \"10px 0px\" }}>{i}</div> })\n    return <div style={{ width: \"100%\" }}>\n        <div style={{ color: \"#858484\", margin: \"30px 20px 5px 20px\", fontWeight: \"bold\", fontSize: \"27px\" }}>\n            {props.title}\n        </div>\n        <div style={{ color: \"#858484\", margin: \"0px 20px 5px 20px\", display: \"flex\", justifyContent: \"space-between\", fontSize: \"20px\" }}>\n            <span>{props.company}</span>\n            <span>{props.start} to {props.end}</span>\n        </div>\n        <div style={{ margin: \"15px 30px\" }}>\n            {duties}\n        </div>\n\n    </div>\n}\n\nfunction Skills(props) {\n\n    const bars = props.skills.map(s => {\n\n\n\n\n\n        return <div style={{ display: \"flex\", flexDirection: \"column\", margin: \"10px\" }} >\n\n\n            <div style={{ fontSize: \"12px\", margin: \"0px 0 2px 5px\", color: \"#858484\" }}>{s.name}</div>\n            <div style={{ width: \"200px\", height: \"30px\", backgroundColor: \"white\", boxShadow: \"0px 0px 3px 0 #888888\", borderRadius: \"10px\", padding: \"5px\" }}>\n                <div style={{ width: s.level * 2 + \"px\", height: \"30px\", backgroundColor: \"#9FA4E3\", borderRadius: \"5px\" }}>\n\n                </div>\n\n            </div>\n\n        </div>\n\n    }\n    );\n\n\n\n\n    return <div style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\" }}>\n        {bars}\n    </div>\n}\n\n\n\n\nfunction App() {\n    return <div id=\"home\">\n        <Cover />\n        <DetailPane />\n\n\n\n\n\n\n    </div>;\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}